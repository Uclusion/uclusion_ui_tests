
defaults: &defaults
  working_directory: ~/src
  docker:
    - image: circleci/python:3.7.3-node

orbs:
  aws-cli: circleci/aws-cli@2.0.3
  cypress: cypress-io/cypress@1.29.0
version: 2.1

jobs:
  prepare:
    working_directory: ~/src
    docker:
        - image: circleci/ruby:2.7
    steps:
      - aws-cli/install
      - aws-cli/setup:
          aws-region: aws_region
          aws-access-key-id: aws_access_key_id
          aws-secret-access-key: aws_secret_access_key
      - run:
          name: disable strict host checking
          command: |
            mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Check out and prepare utils repo
          command: |
            cd ~/
            mkdir circleci_orbs
            git clone git@github.com:Uclusion/circleci_orbs.git ./circleci_orbs
      - run:
          name: delete tusers from Cognito
          command: |
            cd ~/circleci_orbs/scripts
            ./test_user_deleter.rb --poolId=${pool_id}
  record:
    <<: *defaults
    steps:
      - run:
          name: disable strict host checking
          command: |
            mkdir -p ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: Check out and prepare utils repo
          command: |
            cd ~/
            mkdir circleci_orbs
            git clone git@github.com:Uclusion/circleci_orbs.git ./circleci_orbs
      - run:
          name: install latest pip and python modules
          command: |
            sudo pip install --upgrade pip
            pip install --user PyGithub
      - run:
          name: bless
          command: |
            cd ~/circleci_orbs
            python -m scripts.test_and_bless -e ${env_name} -a ${github_token} -u true

workflows:
  create-demo:
    jobs:
      - prepare:
          filters:
            tags:
              only: /^demo_only.*/
            branches:
              ignore: /.*/
          context: stage
      - cypress/install:
          filters:
            tags:
              only: /^demo_only.*/
            branches:
              ignore: /.*/
      - cypress/run:
          store_artifacts: true
          requires:
            - prepare
            - cypress/install
          install-command: 'npm install --no-optional --unsafe-perm'
          spec: cypress/integration/create_demo.js
          filters:
            tags:
              only: /^demo_only.*/
            branches:
              ignore: /.*/
          context: stage
      - cypress/run:
          store_artifacts: true
          requires:
            - prepare
            - cypress/install
          install-command: 'npm install --no-optional --unsafe-perm'
          spec: cypress/integration/create_demo1.js
          filters:
            tags:
              only: /^demo_only.*/
            branches:
              ignore: /.*/
          context: stage
      - cypress/run:
          store_artifacts: true
          requires:
            - prepare
            - cypress/install
          install-command: 'npm install --no-optional --unsafe-perm'
          spec: cypress/integration/create_demo2.js
          filters:
            tags:
              only: /^demo_only.*/
            branches:
              ignore: /.*/
          context: stage
  test-stage:
    jobs:
      - prepare:
          filters:
            tags:
              only: /^stage_only.*/
            branches:
              ignore: /.*/
          context: stage
      - cypress/install:
          filters:
            tags:
              only: /^stage_only.*/
            branches:
              ignore: /.*/
      - cypress/run:
          store_artifacts: true
          requires:
            - prepare
            - cypress/install
          install-command: 'npm install --no-optional --unsafe-perm'
          spec: cypress/integration/create_market.js
          filters:
            tags:
              only: /^stage_only.*/
            branches:
              ignore: /.*/
          context: stage
      - record:
          requires:
            - cypress/run
          filters:
            tags:
              only: /^stage_only.*/
            branches:
              ignore: /.*/
          context: stage